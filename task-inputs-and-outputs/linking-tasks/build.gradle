plugins {
    id 'base'
}

abstract class AddQuotationMarks extends DefaultTask {
    @InputFile
    final abstract RegularFileProperty inputFile = project.objects.fileProperty().convention(project.layout.projectDirectory.file('quote.txt'))
    @OutputFile
    final abstract RegularFileProperty outputFile = project.objects.fileProperty().convention(project.layout.buildDirectory.file('quote-with-quotation-marks.txt'))
    @TaskAction
    void join() {
        outputFile.get().asFile.text = "\"${inputFile.get().asFile.text}\""
    }
}

TaskProvider<AddQuotationMarks> addQuotationMarks = tasks.register('addQuotationMarks', AddQuotationMarks)

abstract class AddQuoteSource extends DefaultTask {
    @Input
    final abstract Property<String> source = project.objects.property(String)
    @InputFile
    final abstract RegularFileProperty inputFile = project.objects.fileProperty()
    @OutputFile
    final abstract RegularFileProperty outputFile = project.objects.fileProperty().convention(project.layout.buildDirectory.file('quote-with-source.txt'))
    @TaskAction
    void join() {
        outputFile.get().asFile.text = "${inputFile.get().asFile.text}\n\n${source.get()}"
    }
}

tasks.register('addQuoteSource', AddQuoteSource) {
    source = 'Dr. No (1963)'
    inputFile = addQuotationMarks.get().outputFile
}